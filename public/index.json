
[{"content":"","date":"13 December 2023","externalUrl":null,"permalink":"/tags/blazor/","section":"Tags","summary":"","title":"Blazor","type":"tags"},{"content":"Blazor is a dotnet/ C# based web app framework. It promises that you\u0026rsquo;ll be able to \u0026ldquo;build full stack web apps without writing a line of JavaScript.\u0026rdquo; At time of writing, this post is hosted on a Blazor frontend application. While building the blogging engine, I discovered that Blazor is cool, it runs on Cloudflare Pages, it\u0026rsquo;s a good dev experience, but it\u0026rsquo;s no substitute for JavaScript (yet).\nGetting started # I decided to use a Blazor WASM project for this site, because I wanted to run it on Cloudflare pages. Pages are awesome because they run on Cloudflare\u0026rsquo;s edge network, AND they come for free. Unfortunately, while Cloudflare does offer a \u0026ldquo;server-side\u0026rdquo; environment (called Cloudflare Workers), they only support a Javascript runtime. For full-stack Blazor (including server-side rendering) a different hosting service might be required.\nI created this app using dotnet 7:\n# check dotnet version dotnet --version 7.0.401 dotnet new blazorwasm -o edge ... Out of the box, this creates a Blazor WASM project with some example components.\nRendering markdown # Since I was porting several existing posts, I wanted to keep using markdown as a simple storage format for all my writing. Therefore, I needed a markdown to HTML renderer. I\u0026rsquo;d usually use a pre-built library in this situation, and I quickly discovered that there are many more Javascript implementations than dotnet. Furthermore, WASM applicatons cannot manipulate the DOM (source), which makes client side markdown rendering essentially impossible using only C#.\nI decided to expose the raw markdown via GET request, and then render to HTML using Showdown JS and Blazor\u0026rsquo;s JS Interop functionality.\n// Post.razor.js export async function setInnerHtmlFromRequest(id, url) { const converter = new showdown.Converter(); const content = await fetch(url); const text = await content.text(); const html = converter.makeHtml(text); document.getElementById(id).innerHTML = html; } // Post.razor // other implementation omitted private async Task LoadPost() { var path = $\u0026#34;/posts/{PostId}.md\u0026#34;; // reference a Javascript module from Blazor var module = await JS.InvokeAsync\u0026lt;IJSObjectReference\u0026gt;(\u0026#34;import\u0026#34;, \u0026#34;./Pages/Post.razor.js\u0026#34;); // call a function in the module await module.InvokeVoidAsync(\u0026#34;setInnerHtmlFromRequest\u0026#34;, ContentId, path); } While this works, it has several downsides:\nLack of type safety on Blazor/JS interop calls and responses. I now need to support Javascript in the project Small performance hit on interop call Harder to migrate to server-side rendering Running on Cloudflare Pages # Cloudflare have some good documentation on how to deploy a Blazor site using Pages. It\u0026rsquo;s quite simple, but the downsides are:\ncloudflare build agent doesn\u0026rsquo;t have dotnet installed, which increases the build time. My simple project takes ~10 minutes to build on Cloudflare. Cloudflare doesn\u0026rsquo;t support server-side C# and so there\u0026rsquo;s no server side rendering No server-side rendering also means no fallback for browsers that don\u0026rsquo;t support WASM. What I get for free with Cloudflare is:\nFree web hosting Edge deployments close to the consumer Preview deployments So as with all engineering challenges, building a blog site with Blazor WASM and Cloudflare has pro\u0026rsquo;s and con\u0026rsquo;s. It\u0026rsquo;s probably better to just statically render your blogs at build time, but where\u0026rsquo;s the fun in that?\nCheck out the code here\n","date":"13 December 2023","externalUrl":null,"permalink":"/posts/blazor-blog/","section":"Posts","summary":"","title":"Blogging with Blazor and Cloudflare","type":"posts"},{"content":"","date":"13 December 2023","externalUrl":null,"permalink":"/tags/cloudflare/","section":"Tags","summary":"","title":"Cloudflare","type":"tags"},{"content":"","date":"13 December 2023","externalUrl":null,"permalink":"/tags/dotnet/","section":"Tags","summary":"","title":"Dotnet","type":"tags"},{"content":"","date":"13 December 2023","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"Welcome to my personal website! I\u0026rsquo;m a software developer and technology enthusiast. Here you\u0026rsquo;ll find my thoughts on technology, programming, and various projects I\u0026rsquo;m working on.\nFeel free to explore my blog posts and learn more about me.\n","date":"13 December 2023","externalUrl":null,"permalink":"/","section":"Rian Finnegan","summary":"","title":"Rian Finnegan","type":"page"},{"content":"","date":"13 December 2023","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"13 December 2023","externalUrl":null,"permalink":"/tags/web-development/","section":"Tags","summary":"","title":"Web-Development","type":"tags"},{"content":"","date":"19 July 2022","externalUrl":null,"permalink":"/tags/cherry/","section":"Tags","summary":"","title":"Cherry","type":"tags"},{"content":"","date":"19 July 2022","externalUrl":null,"permalink":"/tags/entrepreneurship/","section":"Tags","summary":"","title":"Entrepreneurship","type":"tags"},{"content":"","date":"19 July 2022","externalUrl":null,"permalink":"/tags/reflection/","section":"Tags","summary":"","title":"Reflection","type":"tags"},{"content":"For the last 18 months I\u0026rsquo;ve been building a startup, but we\u0026rsquo;ve decided to close it down. It was a tough decision, but the right one. Even though it failed, I have only minor regrets. The company failed to grow, but I experienced personal growth that would be unachievable in a regular job. Would I do it again? Yes.\nCherry Recommends was a SaaS platform (not really, but the term\u0026rsquo;s in vogue) for improving the effectiveness of promotions in e-commerce. We used machine learning algorithms to target individual customers with \u0026ldquo;the best\u0026rdquo; promotion. When used in properly, Cherry could increase revenue (yes, revenue) by 15%. Honestly, we thought it was pretty cool. It was ugly, it was hard to use, and hard to explain - but with financial outcomes like that, we were confident we\u0026rsquo;d find a way. But after 9 months of searching, we just weren\u0026rsquo;t able to acquire new customers at anything near the required rate. We tried changing the our target customer, changing our brand, changing our messaging, and changing our pricing. But those things weren\u0026rsquo;t the problem. The problem was simple: people did not want to buy our product.\nWhat was wrong? If using the tool produced good financial outcomes, why weren\u0026rsquo;t businesses lining up for some of that \u0026ldquo;secret sauce\u0026rdquo;? I\u0026rsquo;ve been reflecting on this question a lot, and I think there are several related reasons.\nThere was no \u0026lsquo;magic moment\u0026rsquo; for users. We tried for a long time to find and build one, but it was always a too far into the journey or too hard to find. It\u0026rsquo;s hard to make a magic moment as an afterthought - they must be integral to the product experience. Building a magic moment was hard for a complex product, and I think this was a fundamental mistake on our part. We built a complex product because we were addressing complex problems across multiple businesses, each requiring suble differences in configuration and capability. Many new customers, when onboarded, brought new features with added complexity. Designing a product requires the balancing of competing demands. Customers will ask for new capabilities, but if (as we were) you\u0026rsquo;re pre-product-market-fit those capabilities aggregate like barnacles on a ship\u0026rsquo;s hull. As they accumulate you sail slower and become ugly. In hindsight, adding features and increasing complexity is a bad strategy if you\u0026rsquo;re pre-PMF.\nWas there a root cause of these mistakes? We were smart founders with experienced people helping us, but we couldn\u0026rsquo;t make it work. If I had to pick \u0026ldquo;one mistake to rule them all\u0026rdquo;, it would be that we chose a market we didn\u0026rsquo;t deeply understand. We were software engineers, management consultants, mathematicians, and engineers. We didn\u0026rsquo;t know much about marketing or e-commerce. We did not have founder-market-fit.\nSo here I am, post-startup, reflecting on the past 18 months. Though the company has been annihilated, I\u0026rsquo;ve learned a few things that may prove valuable. Closing a startup is a tough decision. Being a founder means having irrational optimism that you\u0026rsquo;ll succeed against the odds where others have failed. If you closed the business after 1 setback, you\u0026rsquo;d never make it; but how about 10 setbacks, or 20? At some point, your sceptical mind must intrude and ask the difficult questions. Does this have a chance of working? Can I think of a plan to grow this business? In the end, I believe you must face the music and make the tough choices.\nSomething that helped us understand our situation was comparing ourselves to other companies in our YC batch. In a batch of over 400, some businesses were growing fast and kicking goals, while others were languishing in pools of uncertainty. We were definitely in the latter. I know it\u0026rsquo;s not always fair to compare yourself to others, but you can bet everyone else is. Investors, potential employees, YC group partners, batch mates - all of them look at your company and compare it to the others they know. Here again, the internal battle between irrational optimism and cold skepticism is waged.\nThough I failed to achieve the kind of startup success that makes the newspaper, I achieved personal growth that would be impossible in most other situations. Next time try I startup, my top tips to myself would be:\nStart fast, fail fast. If you can\u0026rsquo;t see consistent growth in 3 months, then stop. Simplicity is paramount. Complexity is the enemy Wait for PMF and growth before going all-in For 18 months people gave me advice on how to run a startup. Some was useful, some was not, and some I thought was useful was actively detrimental. For anyone reading this, remember: learn from my journey what you can, but your journey is your own. Nobody else can make the hard decisions for you. It\u0026rsquo;s up to you.\n","date":"19 July 2022","externalUrl":null,"permalink":"/posts/cherry_reflections/","section":"Posts","summary":"","title":"Reflections on a startup","type":"posts"},{"content":"","date":"19 July 2022","externalUrl":null,"permalink":"/tags/startups/","section":"Tags","summary":"","title":"Startups","type":"tags"},{"content":"At Cherry, we process hundreds of events per second. For Cherry users, we capture and process data every time their customers visit a web page, take an action, purchase an item, etc. Processing events is a mission critical function to understand customer behaviour in real time. So when we discovered that processing latency for some Cherry users was several days, finding and solving the issue became our #1 priority.\nI wrote this to help anyone in a similar position and share what we learned.\nA typical event payload, with latency timestamps emphasised\nThe investigation # Why was it taking several days for some events to show up in Cherry? When Cherry events are ingested they are placed into an Azure Event Hub for processing by a (theoretically) scalable backend running on Azure Functions. This process should be near real time. But (as seen in the event data above) the difference between the event timestamp (i.e. ingestion time) and created time (i.e. process time) was growing rapidly and was at ~6 days.\nOur first instinct was to increase the total number of workers processing events. Things are slow — throw more compute at it! However, this didn’t actually improve the latency or even the total number of events being processed per second.\nPlotting the event processing throughput using KQL\nThe complication # Increasing the number of workers (i.e. increasing compute) didn’t really solve the issue. If the choke point was the number of workers, then we’d expect the # of events processed to increase proportionally — but it didn’t increase above it’s prior maximum. This implied that the choke point existed outside the event processor, either at the input or the output.\nSince the input to the event processor was an Azure Event Hub that was running at well below its theoretical maximum throughput, we naturally turned to the database to which events were being written. Inspecting the query performance, we discovered one query was taking a very long time, typically 80 seconds! This one query was taking so long, that the mean time to process a single event had blown out to 85 seconds.\nPlotting the max and mean event processing time using KQL\nThe discovery # Why was this query taking so long? Turns out, it was “find-and-replace” logic, written by yours truely, for the brilliantly useless functionality that replaced an event if its ID already existed in the database. There is a reason why event logs are generally append-only! As the number of events in the database had grown, the performance of this previously innocuous query had steadily degraded. At first, the latency was only a few seconds, then a few minutes, but soon it became hours and days. Since the situation wasn’t really an “error” in the conventional sense, they weren’t picked up by our automated monitoring systems. Nonetheless, with this knowledge in hand, we were ready to take action.\nResults of the fix — a dramatic improvement\nThe solution # Going back to first principals, we realised that an event log shouldn’t be responsible for updating events that already exist. It doesn’t scale and it’s uncommon behaviour. When we decided to remove the offending query from the event processor, the processing time dropped dramatically, from 80 seconds to fractions of a second. We let the a database index deal with clashing IDs, and pass any errors into a dead letter queue. The lesson here is twofold\nKeep your event processors FAST. Slow event processing can slowly backup your entire pipeline and cause serious congestion. Event logs should be append only. Updates (which happen rarely if at all) should be handled by a separate process. Learn more Cherry is a SaaS tool for improving ROI from promotion campaigns. Learn more at our website.\n","date":"20 May 2022","externalUrl":null,"permalink":"/posts/secret-to-event-processing/","section":"Posts","summary":"","title":"A secret to Event Processing","type":"posts"},{"content":"","date":"20 May 2022","externalUrl":null,"permalink":"/tags/azure/","section":"Tags","summary":"","title":"Azure","type":"tags"},{"content":"","date":"20 May 2022","externalUrl":null,"permalink":"/tags/event-processing/","section":"Tags","summary":"","title":"Event-Processing","type":"tags"},{"content":"","date":"20 May 2022","externalUrl":null,"permalink":"/tags/technology/","section":"Tags","summary":"","title":"Technology","type":"tags"},{"content":"","date":"20 May 2022","externalUrl":null,"permalink":"/tags/web/","section":"Tags","summary":"","title":"Web","type":"tags"},{"content":" Bots in Kube # So you\u0026rsquo;ve built for first bot with Microsoft BotBuilder SDK, deployed it to Azure App Service or GCloud App Engine, and everything is just swell. Then along comes your company\u0026rsquo;s CTO, who says they\u0026rsquo;ve committed to all their services having zero downtime (best effort of course). On the same day, your friend had the great idea to start doing A/B testing. What do you do?\nYou\u0026rsquo;ve outgrown the App Service platform. Hello Kubernetes.\nWhat to do # There\u0026rsquo;s three things we have to do to get our bot into k8s.\nContainerise the bot code Provision a Kubernetes Cluster Enable cluster HTTPS Ingress Containerising a Bot # Lucky for us, bots look mostly like web servers, and we\u0026rsquo;re pretty good at containerising web servers. Create a Dockerfile that builds your bot image. It should look something like this one, which uses the builder pattern to reduce the size of the output image.\n# this file builds a bot built in Typescript. FROM ubuntu:16.04 as builder RUN apt-get update \u0026amp;\u0026amp; \\ apt-get install -y curl \u0026amp;\u0026amp; \\ curl -sL https://deb.nodesource.com/setup_10.x | bash \u0026amp;\u0026amp; \\ apt-get install -y git nodejs build-essential RUN npm install -g node-gyp \u0026amp;\u0026amp; \\ npm install -g typescript WORKDIR /build COPY my-bot/package.json . RUN npm install # this helps reduce build times during dev iteration COPY my-bot . RUN npm run build FROM node:10-alpine WORKDIR /app/ COPY --from=builder /build . ENTRYPOINT [ \u0026#34;node\u0026#34;, \u0026#34;js/app.js\u0026#34; ] Running the container locally and connecting with the Bot Framework Emulator, you might see this error\nBotFrameworkAdapter.processActivity(): 500 ERROR - FetchError: request to http://localhost:60321/v3/conversations/1dk6m0la5ji6/activities/bcmfna2mfjmf failed, reason: connect ECONNREFUSED 127.0.0.1:60321 That\u0026rsquo;s because the Emulator opens a localhost port to listen for messages from the bot, but that address is not actually accessible from inside the container, hence the connection refused. You need to disable \u0026lsquo;Bypass ngrok for local addresses\u0026rsquo;.\nPublish the image # Once you\u0026rsquo;ve built the image, publish it to the repository of your choice, e.g. Docker Hub. Now it\u0026rsquo;s ready to be deployed into the cluster.\nProvision a Kubernetes Cluster # Now creating a kubernetes cluster from scratch is hard. If your like me, you\u0026rsquo;d prefer if someone else did the hard work for you. Well they have!\nAzure Kubernetes Service (AKS) is the fasted way to get a cluster up and running. Just spin it up via Azure CLI. Then run this command - az aks get-credentials - and kubectl now interacts with the cluster. Almost too easy.\nSide note: It\u0026rsquo;s important to have a stateless bot (i.e. state remains in a remote database like CosmosDB and not memory) because Kubernetes deployments work best this way.\nDeploy the bot # Your bot will need three kubernetes objects: a deployment, a service, and a secret.\napiVersion: apps/v1 kind: Deployment metadata: name: my-bot-deployment labels: app: my-bot spec: replicas: 2 selector: matchLabels: app: my-bot template: metadata: labels: app: my-bot spec: containers: - name: my-bot image: dockerhubrepo/my-bot:tag ports: - containerPort: 80 env: - name: PORT value: \u0026#34;80\u0026#34; - name: MICROSOFT_APP_ID valueFrom: secretKeyRef: name: microsoft-bot-app key: app-id - name: MICROSOFT_APP_PASSWORD valueFrom: secretKeyRef: name: microsoft-bot-app key: app-password --- kind: Service apiVersion: v1 metadata: name: my-bot-service spec: selector: app: my-bot ports: - protocol: TCP port: 80 targetPort: 80 Create the secret:\ncd /your/secrets/directory echo -n \u0026#39;your-id\u0026#39; \u0026gt; ./app-id echo -n \u0026#39;your-password\u0026#39; \u0026gt; ./app-password kubectl create secret generic microsoft-bot-app --from-file=./app-password --from-file=./app-id Enable Cluster HTTPS Ingress # This step is probably the most convoluted, but once you\u0026rsquo;re up and running, it should require much intervention. I\u0026rsquo;m not going to rewrite all the steps (there are many) but follow this walkthrough for enabling HTTPS ingress on AKS.\nNote: Be sure to use letsencrypt-prod - the Bot Emulator and Azure Bot Service will not work unless the bot is hosted under a trusted certificate.\nIf you\u0026rsquo;re following the anove walkthrough, you\u0026rsquo;ll need to customise your http ingress routes.\nModify the K8s Ingress object to look something like this:\napiVersion: extensions/v1beta1 kind: Ingress metadata: name: my-bot-ingress annotations: kubernetes.io/ingress.class: nginx certmanager.k8s.io/cluster-issuer: letsencrypt-prod nginx.ingress.kubernetes.io/rewrite-target: / spec: tls: - hosts: - my-dns-name.australiaeast.cloudapp.azure.com secretName: tls-secret rules: - host: my-dns-name.australiaeast.cloudapp.azure.com http: paths: - path: /bot backend: serviceName: my-bot-service servicePort: 80 That\u0026rsquo;s it, you\u0026rsquo;re done. You should be able to connect to your bot at https://my-dns-name.australiaeast.cloudapp.azure.com/bot/api/messages\nSample # You can see a full sample on github\nTroubleshooting # The bot doesn\u0026rsquo;t respond at all\u0026hellip; # Check the validity of the certificate by navigating to your https url in a browser. If the browser doesn\u0026rsquo;t trust the certificate, your ingress isn\u0026rsquo;t configured properly. Check the issuer of the certificate.\nThe bot says I\u0026rsquo;m unauthorized\u0026hellip; # Check the values of MICROSOFT_APP_ID and MICROSOFT_APP_PASSWORD. They should be the same in the Bot Service Connector and in your code. The password is hidden inside a kubernetes secret.\nSomething is wrong\u0026hellip; # You can get the logs from your container with the following command\n$ kubectl logs --selector=app=my-bot restify listening to http://[::]:80 Yes, this service is alive recieved a message Replying: [conversationUpdate event detected] ","date":"2 August 2018","externalUrl":null,"permalink":"/posts/bots-in-kubernetes/","section":"Posts","summary":"","title":"Bots in Kubernetes","type":"posts"},{"content":"","date":"2 August 2018","externalUrl":null,"permalink":"/tags/bots-in-kubernetes/","section":"Tags","summary":"","title":"Bots-in-Kubernetes","type":"tags"},{"content":" What happened in Pokemon? # I remember Pokemon on GameBoy. An excellent game with many characters. Like all games (till now - more on that soon) the conversations were somewhat forced. The most creative moment was choosing your name in the beginning. Almost all my interactions with non-player chracters (NPC) involved multiple choice answers at best, and pre-canned conversations at worst.\nGames have Evolved # A decade after Pokemon was first released on Gameboy, Fallout 3 was one of the most popular games in the world. For all its quality graphics and cool story, the NPC interations remain remarkably unchanged.\nWe have the technology. We can do better # What if you could actually talk to NPCs? Well, now you can!\nWhat is Natural Language Understanding? # the application of computational techniques to the analysis and synthesis of natural language and speech.\nNLU, sometimes called Natural Language Processing (NLP), are methods for processing and using natural human speech or text in classical algorithms. Recent technological breakthroughs in Deep Learning have turbocharged NLU, and now you can use it in your own game or application.\nSounds hard\u0026hellip; # Not really, check this out.\nLUIS - the Language Understanding and Intelligence Service from Microsoft Azure - is super simple to use. You can follow this tutorial and get started in just 10 minutes!\nAside: if you\u0026rsquo;re in Australia, make sure you head to the au.luis.ai domain.\nWhat\u0026rsquo;s LUIS - the quick version # LUIS is a web service, invoked via a REST endpoint, that converts sentences (called \u0026lsquo;utterances\u0026rsquo;) like this:\nOrder me 2 pizzas\ninto data structures like this:\n{ \u0026#34;query\u0026#34;: \u0026#34;Order me 2 pizzas\u0026#34;, \u0026#34;topScoringIntent\u0026#34;: { \u0026#34;intent\u0026#34;: \u0026#34;FoodOrder\u0026#34;, \u0026#34;score\u0026#34;: 0.9999981 }, \u0026#34;intents\u0026#34;: [ { \u0026#34;intent\u0026#34;: \u0026#34;FoodOrder\u0026#34;, \u0026#34;score\u0026#34;: 0.9999981 }, { \u0026#34;intent\u0026#34;: \u0026#34;None\u0026#34;, \u0026#34;score\u0026#34;: 0.0604290478 }, { \u0026#34;intent\u0026#34;: \u0026#34;Reminder\u0026#34;, \u0026#34;score\u0026#34;: 0.00177723425 } ], \u0026#34;entities\u0026#34;: [ { \u0026#34;entity\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;builtin.number\u0026#34;, \u0026#34;startIndex\u0026#34;: 9, \u0026#34;endIndex\u0026#34;: 9, \u0026#34;resolution\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;2\u0026#34; } }, { \u0026#34;entity\u0026#34;: \u0026#34;pizzas\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;FoodType\u0026#34;, \u0026#34;startIndex\u0026#34;: 11, \u0026#34;endIndex\u0026#34;: 16, \u0026#34;score\u0026#34;: 0.8928091 } ] } If you\u0026rsquo;re making a game or an app, and you can make web requests, then you can have NPCs that respond to natural language!\nNow for the good part # Modern games are much more sophisticated than Gameboy Pokemon and Fallout 3. Cutting edge games are now in virtual reality (VR) on platforms like Vive, Oculus, and Windows Mixed Reality. But we\u0026rsquo;re starting to use VR for other interesting applications.\nExperience a New Language in VR with V-KAIWA # V-KAIWA are building an amazing tool for students to experience language learning in VR. Beyond building stylised worlds and engaging story lines, V-KAIWA are building customisable conversational NPCs. Let\u0026rsquo;s break that down.\nConversational NPCs # As the name suggests, a conversational NPC is a character with which you can converse. OK, so they aren\u0026rsquo;t going to pass a Turing test, but they can respond to natural language. Ask the hot dog vendor on the street for a hot dog, and you\u0026rsquo;ll get one! Ask a stranger for directions, and they\u0026rsquo;ll help! But if you ask a stranger for the meaning of life - of course you\u0026rsquo;ll get a silly answer (actually that\u0026rsquo;s kind of realistic).\nCustomisable NPCs # V-KAIWA let\u0026rsquo;s language teachers customise the way their students can converse with NPCs. How does this work in practice? Imagine a language class on recognising descriptions of people and objects. The teacher can describe a person (a woman in a jacket) and name an item (a newspaper) and the students must complete a scenario in the virtual world. The teacher can build precisely that conversation scenario in V-KAIWA\u0026rsquo;s designer tool!\nWhen the student find the newspaper, he can talk with the woman.\nStudent: Here\u0026rsquo;s the newspaper you asked for. Woman in Jacket: Thanks, I was looking for one of those.\nIt\u0026rsquo;s almost too easy.\nSugar on top # By using speech-to-text and speech synthesis tools, V-KAIWA make every NPC interaction aural. You can speak directly to NPCs, and they speak back. LUIS means you can speak naturally. Gaze means you speak to the NPC you\u0026rsquo;re looking at.\nI want that! # Well you can have it! There\u0026rsquo;s a great blog written by some of my collegues at Road to MR describing how to use LUIS in your Unity project. They\u0026rsquo;ve created a great Unity Package you can use to get started quickly.\nWhat about the designer? It\u0026rsquo;s also open source and available on github\nCSE Hacks # This work was a collaboration between Microsoft and V-KAIWA. Big thanks to them for letting me work on their exciting product.\nSeiya presenting at @Microsoft @microsoft Mixed Reality Hackfest - our beginners product did a complete 180 (in a good way!) - full demo video coming soon 😉 And special props @xtellurian for being part of V-KAIWA for the week 🤓 pic.twitter.com/bmhUpQItKC\n\u0026mdash; V-KAIWA (@v_kaiwa) May 18, 2018 ","date":"23 May 2018","externalUrl":null,"permalink":"/posts/smarter-npcs-with-natural-language-processing/","section":"Posts","summary":"","title":"Smarter NPCs with Natural Language Processing","type":"posts"},{"content":"","date":"23 May 2018","externalUrl":null,"permalink":"/tags/smarter-npcs-with-natural-language-processing/","section":"Tags","summary":"","title":"Smarter-Npcs-With-Natural-Language-Processing","type":"tags"},{"content":"One of the best things about building chat bots with Microsoft Bot Framework is being able to have a single code base for all the channels supported by the Bot Connector, like Slack, Skype, Facebook and even an embedded HTML interface. But what if you want to make your own client? Well, in that case you can use the Bot Framework DirectLine API.\nBuild a Bot # There are lots of good tutorials on how to get started writing bots using the Microsoft Bot Builder SDK. If you\u0026rsquo;re just getting started, try the excellent Mission Mars Tutorials.\nOnce you\u0026rsquo;ve got the basics, you should try the Bot Boiler Framework in NodeJS. It provides tools for dependency injection, testing, deployment to Azure Functions, and more. I won\u0026rsquo;t go into how to write a good chatbot - this article assumed that your bot code already exists.\nEnable Direct Line # Configure your channels in the Bot Portal and enable the Direct Line channel, then configure your Direct Line Channel, and get your direct line secret. You\u0026rsquo;ll need that secret later on.\nUsing Xamarin.Forms Project # Why Xamarin and Forms? # If you\u0026rsquo;ve never heard of Xamarin, then you\u0026rsquo;ve been missing out. Xamarin is a toolset, originally built using the Mono Framework, that allows developers to write common C# (and F#) and deploy applications to many operating systems and environments. The most popular are Android, iOS, and Windows.\n​ Xamarin Forms is a set of API\u0026rsquo;s written in Xamarin that let us write common user interface code. Basically, I can run exactly the same app on Android, iOS and Windows. Cool!\nFile \u0026gt; New Project (VS2017) # I\u0026rsquo;m going using Visual Studio 2017. You can download the community version for free. DotNet Standard is supported in VS2015 but not in earlier versions.\nThis guide can help you create your first Xamarin Forms project. The short version is:\nCreate a new Xamarin.Forms project\nSelect PCL as your method for sharing code\nCreate a blank app (not a master detail page)\nMove to dotnet standard # ​Xamarin.Forms recently started supporting DotNet Standard (hooray!). .Net Standard is the latest and greatest standard for writing cross platform C#. It provides a common set of API\u0026rsquo;s that work everywhere. Better yet, it improves dramatically over the previous standard (Portable Class Libraries, or PCL) as there\u0026rsquo;s no platform targets, just backwards compatible versions of .NET Standard.\n​Before we get started, we\u0026rsquo;ve got to change the way we\u0026rsquo;re sharing code in our Xamarin project, by converting to .NET Standard. We\u0026rsquo;ll change our PCL project (not the Android, iOS, or UWP projects) by deleting packages.config then unloading the project and replacing the contents of the .csproj file with the following code:\n\u0026lt;Project Sdk=\u0026#34;Microsoft.NET.Sdk\u0026#34;\u0026gt; \u0026lt;PropertyGroup\u0026gt; \u0026lt;TargetFramework\u0026gt;netstandard1.3\u0026lt;/TargetFramework\u0026gt; \u0026lt;PackageTargetFallback\u0026gt;$(PackageTargetFallback);portable-win+net45+wp8+win81+wpa8\u0026lt;/PackageTargetFallback\u0026gt; \u0026lt;/PropertyGroup\u0026gt; \u0026lt;/Project\u0026gt; You\u0026rsquo;ll have to re-add and install any NuGet Packages, but at this stage it should only be the Xamarin.Forms package.\nImport DirectLine Client # ​The best thing about targetting .NET Standard is we can use the official NuGet package for interacting with the DirectLine API!\n​Install-Package Microsoft.Bot.Connector.DirectLine -Version 3.0.2\nCommunicate with your Bot # Here\u0026rsquo;s a screenshot of what we expect our Bot UI to look like:\nBefore continuing, I suggest you read Key Concepts in DirectLine API 3.0\nFirst, we create a microservice class for interacting with the bot. We inject the direct line secret (from the portal) into the constructor.\nprivate DirectLineClient _client; public BotService(string directLineSecret) { if (string.IsNullOrEmpty(directLineSecret)) { throw new ArgumentNullException(\u0026#34;Direct Line Secret is required\u0026#34;); } _client = new DirectLineClient(directLineSecret); } There are two important public methods: CreateConversation and SendMessage.\npublic async Task\u0026lt;string\u0026gt; StartConversation(bool isDefault = true) { var conversation = await _client.Conversations.StartConversationAsync(); PollForMessages(conversation); if(isDefault || _defaultConversation == null) { _defaultConversation = conversation; } return conversation.ConversationId; } // Poll the API every second to check for new messages private void PollForMessages(Conversation conversation) { Device.StartTimer(new TimeSpan(0, 0, 1), () =\u0026gt; { var activitySet = _client.Conversations.GetActivities( conversation.ConversationId, _watermark); var activities = activitySet?.Activities.Where(_ =\u0026gt; _.From.Id != GetUserId()); _watermark = activitySet.Watermark; // watermark lets us only get new messages if (activities != null) { foreach (var activity in activities) { ActivityReceived?.Invoke(this, new ActivityEventArgs() { Activity = activity }); } } return true; }); } ​\npublic async Task\u0026lt;ResourceResponse\u0026gt; SendMessage( string message, string conversationId = null) { if (conversationId == null) { conversationId = GetDefaultConversationId(); // get default if not specified } // create a new Activity to send to the Bot SentActivity = new Activity { From = GetChannelAccount(), Text = message, Type = ActivityTypes.Message }; // invoke an event signalling an activity has been sent ActivitySent?.Invoke(this, new ActivityEventArgs() { Activity = SentActivity }); var response = await _client.Conversations.PostActivityAsync(conversationId, SentActivity); return response; } ​\nMonitor the Conversation # We need to make a user interface for chatting with the bot. We add these two events to our BotService class in order to track when things happen.\n​\npublic event EventHandler\u0026lt;ActivityEventArgs\u0026gt; ActivitySent; public event EventHandler\u0026lt;ActivityEventArgs\u0026gt; ActivityReceived; ​\nThese two events are going to let us update our UI any time we send or receive a message from the Bot. We add every activity we send/ receive to an observable collection that we bind to a ListView. Actually, we\u0026rsquo;re going to use a custom UI element, described below, but it inherits from the standard Xamarin Forms ListView.\nThe ConversationViewModel class contains the following property:\npublic ObservableCollection\u0026lt;Activity\u0026gt; Messages { get; set; }\n​\nand in our XAML view, we create a listview that binds to that collection.\n\u0026lt;ListView x:Name=\u0026#34;ChatListView\u0026#34; ItemsSource=\u0026#34;{Binding Messages}\u0026#34; ItemTemplate=\u0026#34;{StaticResource activityDataTemplateSelector}\u0026#34; SeparatorVisibility=\u0026#34;None\u0026#34; HasUnevenRows=\u0026#34;True\u0026#34;\u0026gt; \u0026lt;customViews:ChatListView.Effects\u0026gt; \u0026lt;effects:ListViewScrollToBottomEffect /\u0026gt; \u0026lt;effects:ListViewStackFromBottomEffect /\u0026gt; \u0026lt;/customViews:ChatListView.Effects\u0026gt; \u0026lt;/ListView\u0026gt; There are two interesting parts of this XAML:\n​\nItemTemplate=\u0026quot;{StaticResource activityDataTemplateSelector}\u0026quot;\n\u0026lt;customViews:ChatListView.Effects\u0026gt;\nData Templates # We need to tell the difference between messages to and from the bot, and render those messages differently so the user can tell the difference. In order to do that, we use a Data Template Selector, which we referenced in the above XAML.\npublic class ActivityDataTemplateSelector : DataTemplateSelector { public DataTemplate SenderTemplate { get; set; } public DataTemplate ReceiverTemplate { get; set; } public DataTemplate AdaptiveCardsTemplate { get; set; } protected override DataTemplate OnSelectTemplate(object item, BindableObject container) { var activity = (Activity)item; if (activity.Attachments != null \u0026amp;\u0026amp; activity.Attachments.Any( m =\u0026gt; m.ContentType == \u0026#34;application/vnd.microsoft.card.adaptive\u0026#34;)) { return AdaptiveCardsTemplate; } if (activity is SendPhotoActivity) { if (((SendPhotoActivity)activity).Path != null \u0026amp;\u0026amp; ((SendPhotoActivity)activity).Path != string.Empty) { return SentPhotoAttachmentTemplate; } } return ((Activity)item).From.Name == \u0026#34;MyName\u0026#34; ? SenderTemplate : ReceiverTemplate; } } Then, in XAML, we bind those three public properties to views which will be rendered at runtime depending on the type of activity. For example, our receiver activity template looks like this:\n\u0026lt;DataTemplate x:Key=\u0026#34;receiverActivityTemplate\u0026#34;\u0026gt; \u0026lt;ViewCell\u0026gt; \u0026lt;Grid Padding=\u0026#34;10, 2, 10, 2\u0026#34;\u0026gt; \u0026lt;Frame HasShadow=\u0026#34;True\u0026#34; VerticalOptions=\u0026#34;FillAndExpand\u0026#34; HorizontalOptions=\u0026#34;FillAndExpand\u0026#34; Margin=\u0026#34;5\u0026#34; CornerRadius=\u0026#34;15\u0026#34;\u0026gt; \u0026lt;StackLayout Orientation=\u0026#34;Vertical\u0026#34; VerticalOptions=\u0026#34;FillAndExpand\u0026#34; HorizontalOptions=\u0026#34;FillAndExpand\u0026#34;\u0026gt; \u0026lt;md:MarkdownView Markdown=\u0026#34;{Binding Text}\u0026#34; /\u0026gt; \u0026lt;Label Text=\u0026#34;{Binding From.Name}\u0026#34; FontSize=\u0026#34;Micro\u0026#34; HorizontalOptions=\u0026#34;EndAndExpand\u0026#34; /\u0026gt; \u0026lt;/StackLayout\u0026gt; \u0026lt;/Frame\u0026gt; \u0026lt;/Grid\u0026gt; \u0026lt;/ViewCell\u0026gt; \u0026lt;/DataTemplate\u0026gt; Which we bind to the selector as follows:\n\u0026lt;dataTemplates:ActivityDataTemplateSelector x:Key=\u0026#34;activityDataTemplateSelector\u0026#34; ReceiverTemplate=\u0026#34;{StaticResource receiverActivityTemplate}\u0026#34; /\u0026gt; ​\nUsing Effects # Effects are a great way to add platform specific features to your Xamarin Forms UI. Jim Bennet has a really great (and short!) blog post on how to implement Effects in Xamarin Forms.\nOne effect you might find useful is listing messages from the bottom.\nIn Android, we need to access the native listview control. With effects, it\u0026rsquo;s easy!\npublic class DroidListViewStackFromBottomEffect : PlatformEffect { protected override void OnAttached() { var listView = Control as Android.Widget.ListView; if (listView != null) { listView.StackFromBottom = true; } } protected override void OnDetached(){} } Check out the GitHub repo to see all three effects we implemented: Stacking from bottom, auto scrolling, and a keyboard \u0026lsquo;done\u0026rsquo; button.\nUsing Custom Renderers # Another cool feature of Xamarin Forms are custom renderers. Every UI Container in Xamarin Forms renders to a platform specific UI Control. For example, a Xamarin Forms ListView when running in Android, is actually rendered to a native Android ListView. By writing a custom renderer, we can control the way our UI is converted to native controls. ​\nWorking with Adaptive Cards # We\u0026rsquo;re going to use a custom renderer to render adaptive cards received in a conversation. Adaptive Cards are a great way to serialize a display and share it across multiple user experiences. The same adaptive card may be rendered on Facebook Messenger or Microsoft Teams, and though it contains the same information and functionality, the platform renders it to look though it\u0026rsquo;s a native implementation (because it is).\nDownload and Build the Adaptive Card Renderer for Xamarin Forms # Adaptive Cards by Microsoft is a 100% open source project. Check them out on GitHub.\nAdaptive Cards are designed to render anywhere that your users are. The following native platform renderers are under development right now.\nAndroid -\u0026gt; Source ​ HTML -\u0026gt; Source iOS -\u0026gt; Source WPF -\u0026gt; Source UWP -\u0026gt; Source Xamarin.Forms -\u0026gt; No ETA yet - Source- Alpha\nAt time of writing, the Xamarin Forms Renderer is still in alpha - which means we\u0026rsquo;ve included a pre-built library in the /lib directory of our project.\nRendering Adaptive Cards # We implemented a custom renderer \u0026amp; data template combination that allowed us to render adaptive cards directly in the ListView.\nThere are three important parts to rendering the card.\nFirst we need to select the correct Data Template based on the incoming activity. These lines in ActivityDataTemplateSelector achieve just that\nif (activity.Attachments != null \u0026amp;\u0026amp; activity.Attachments.Any(m =\u0026gt; m.ContentType == \u0026#34;application/vnd.microsoft.card.adaptive\u0026#34;)) { return AdaptiveCardsTemplate; } Second, we create a custom view inheriting from StackLayout\npublic class AdaptiveCardLayout : StackLayout { public event EventHandler OnAction; public void InvokeOnAction(object sender, ActionEventArgs args) { Device.BeginInvokeOnMainThread(() =\u0026gt; { MessagingCenter.Send(this, \u0026#34;AdaptiveCardAction\u0026#34;, } } } This custom view is bound, via a data template definition in XAML.\n\u0026lt;DataTemplate x:Key=\u0026#34;adaptiveCardsTemplate\u0026#34;\u0026gt; \u0026lt;ViewCell\u0026gt; \u0026lt;customViews:AdaptiveCardLayout /\u0026gt; \u0026lt;/ViewCell\u0026gt; \u0026lt;/DataTemplate\u0026gt; ... \u0026lt;dataTemplates:ActivityDataTemplateSelector x:Key=\u0026#34;activityDataTemplateSelector\u0026#34; AdaptiveCardsTemplate=\u0026#34;{StaticResource adaptiveCardsTemplate}\u0026#34; ​\nThirdly, we use the adaptive cards renderer to actually render the card.\n// this code is shortened for brevity, and should not be used. public class DroidAdaptiveCardLayoutRenderer : ViewRenderer\u0026lt;AdaptiveCardLayout, Android.Views.View\u0026gt; { protected override void OnElementChanged(ElementChangedEventArgs\u0026lt;AdaptiveCardLayout\u0026gt; e) { var activity = e.NewElement.BindingContext as Bot.Connector.DirectLine.Activity; var renderer = new AdaptiveCards.Rendering.AdaptiveCardRenderer(); var cardAttachments = activity.Attachments.Where( m =\u0026gt; m.ContentType == \u0026#34;application/vnd.microsoft.card.adaptive\u0026#34;); var jObject = (JObject)attachment.Content; var xaml = renderer.RenderCard(card); e.NewElement.Children.Add(xaml.View); } } You can see our droid renderer on GitHub.\nSample Project # ​We used these patterns and code in a 3 day hack with the Australian tax office. Hey look, its a robot that helps you with your tax!\n​ ​You can see the complete solution on GitHub\n​\nFurther Reading # Adaptive Cards\nBot Framework Docs\nBot Framework DirectLine API\nBot Boiler Framework\nDownload Visual Studio\nXamarin.Forms \u0026amp; DotNet Standard\n.Net Standard\nUpgrade a PCL to .NET Standard\nXamarin.Forms Effects\n​\n","date":"11 March 2018","externalUrl":null,"permalink":"/posts/xamarin-chatbots/","section":"Posts","summary":"","title":"Building Xamarin.Forms Chatbots with Bot Framework Direct Line API","type":"posts"},{"content":"","date":"11 March 2018","externalUrl":null,"permalink":"/tags/xamarin-chatbots/","section":"Tags","summary":"","title":"Xamarin-Chatbots","type":"tags"},{"content":" The Digital World # The digital world exists at once everyone and nowhere. Things are happening there, at the speed of light. Those events effect our lives, but as physical beings it takes us time and effort to response. A digital assistant responds to events in the digital world, helping you that pervasive yet ephemeral environment.\nAs the digital world becomes busier and noisier, we need cloud-scale technologies that allow us to respond to events in real time. Azure event grid proves exactly that type of medium, for events on the web and in the cloud. Using event grid and bot framework, we can build bots that observe events in the grid, let you know when important things are happening, and provide options for responding.\nAzure Event Grid # Azure Event Grid allows you to easily build applications with event-based architectures. You select the Azure resource you would like to subscribe to, and give the event handler or WebHook endpoint to send the event to. Event Grid has built-in support for events coming from Azure services, like storage blobs and resource groups. Event Grid also has custom support for application and third-party events, using custom topics and custom webhooks.\nMore publishers and handlers are being added. Event Grid is currently in preview, but is expected to be in GA by the end of 2017.\nThe best features of event grid are:\nCloud Scale: Can support millions of events per second Cloud Pricing: GA pricing will be $0.60 / million events Low Latency: Events are delivered usually within a second Flexible Schema: Arbitrary JSON payloads Guaranteed Delivery: Retry policy and eventual consistency Bots in the Grid # Conversations are growing in popularity as an interface with the digital world. Conversations naturally morph between the synchronous and asynchronous, making them a perfect fit for how we interact with modern applications.\nResponding to Digital Events # The following shows how to listen for events with Microsoft Bot Framework. In this example, I\u0026rsquo;ll be using an ASP.NET bot, so this code will work for any ASP.NET application, and the same pattern holds for most web applications.\nArchitecture # Subscribing your bot to events is actually very simple. Just implement an http endpoint that receives incoming webhooks.\nIncoming Event Data Structure # Incoming events, via webhook, are delivered by the body of an HTTP Post. The following is an example:\n{[ { \u0026#34;Data\u0026#34;: { \u0026#34;Correlation\u0026#34;: { \u0026#34;ExternalReferenceId\u0026#34;: \u0026#34;9c551c4f-9a73-4565-8590-b4b81b074dfb\u0026#34; }, \u0026#34;To\u0026#34;: { \u0026#34;Id\u0026#34;: \u0026#34;myUserId\u0026#34;, \u0026#34;DisplayName\u0026#34;: \u0026#34;Rian\u0026#34; }, \u0026#34;Amount\u0026#34;: 150.0, \u0026#34;Message\u0026#34;: \u0026#34;Whatever you like\u0026#34; }, \u0026#34;Id\u0026#34;: \u0026#34;fbfaab9e-a328-4c77-bee7-8fb95264d4fd\u0026#34;, \u0026#34;Subject\u0026#34;: \u0026#34;custom\\\\value\u0026#34;, \u0026#34;EventType\u0026#34;: 0, \u0026#34;EventTime\u0026#34;: \u0026#34;2017-10-25T23:01:37.3456283Z\u0026#34;, \u0026#34;topic\u0026#34;: \u0026#34;/SUBSCRIPTIONS/XXXXXXXX-XXXX-XXXX-XXXX-XX/RESOURCEGROUPS/YOUR-GROUP/PROVIDERS/MICROSOFT.EVENTGRID/TOPICS/YOUR_TOPIC\u0026#34; } ]} Since this is a custom event, everything in the Data field is yours to play with. The other top level fields define how the event is processed within event grid.\nSecurity # Event Grid can provide up to a million events per second, which could be the biggest DDOS cannon on the public cloud! Luckily, when you register a webhook subscriber, the first request contains a challenge that must be responded to correctly, else the subscription fails. The challenge request has the same structure as a normal event, however the data field contains a validation code that must be returned in the HTTP response.\n[{ \u0026#34;id\u0026#34;: \u0026#34;2d1781af-3a4c-4d7c-bd0c-e34b19da4e66\u0026#34;, \u0026#34;topic\u0026#34;: \u0026#34;/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\u0026#34;, \u0026#34;subject\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;validationCode\u0026#34;: \u0026#34;512d38b6-c7b8-40c8-89fe-f46f9e9622b6\u0026#34; }, \u0026#34;eventType\u0026#34;: \u0026#34;Microsoft.EventGrid.SubscriptionValidationEvent\u0026#34;, \u0026#34;eventTime\u0026#34;: \u0026#34;2017-08-06T22:09:30.740323Z\u0026#34; }] You must return the validation code as a validation response:\n{ \u0026#34;validationResponse\u0026#34;: \u0026#34;512d38b6-c7b8-40c8-89fe-f46f9e9622b6\u0026#34; } Its also best practice to protect your webhook endpoint with a secret key. Its quite simple: just provide that key when setting up the subscription, and the request path contains that key before processing any event. Your webhook path should look like:\nhttps://\u0026lt;base_url\u0026gt;/api/events?secret=YOUR_SECRET_KEY\nHandling Incoming Events with ASP.NET # The key method on your controller accepts an HTTP Post and should return a 200 or 202, to ensure that event grid knows that the event has been received, and won\u0026rsquo;t retry.\npublic async Task\u0026lt;HttpResponseMessage\u0026gt; Post([FromBody]dynamic e) { foreach ( var azEvent in e) { if (azEvent?.data?.validationCode != null) { return Request.CreateResponse(HttpStatusCode.OK, new { validationResponse = x.data.validationCode }); } else { HandleEvent(azEvent); } } return Request.CreateResponse(HttpStatusCode.OK); } See this gist for the full controller code\nCreating and Subscribing to Topics and Events # Event Grid topics are Azure resources, and must be placed in an Azure resource group. The resource group is a logical collection into which Azure resources are deployed and managed.\nFollow these steps in the Azure Portal to use custom topics:\nCreate an Azure Resource Group if you don\u0026rsquo;t have one already. Under More Services search for event grid, and select Event Grid Topics Create a new topic Under More Services search for event grid, and select Event Grid Subscriptions Create a new subscription, and enter the endpoint you created as a webhook. You can follow detailed steps here\nDev \u0026amp; Test using Ngrok # You can also get events directly to your local machine using ngrok. When you run a local server, there are listeners on local ports e.g. localhost:44313/api/events. Using ngrok, you can expose your local server to the web. After installing ngrok, run the following command: ngrok http 44313 -host-header=\u0026quot;localhost:44313\u0026quot; and you\u0026rsquo;ll have a public url you can then set as a new subscription.\nAdd your public ngrok url, with events path and key, as a new event subscription: https://xxxxxx.ngrok.io/api/events?key=YOUR_SECRET_KEY\nProactive Bot Messages # Now your bot web server is receiving events, you can use that power to send proactive messages to users affected by that event. For example, you may generate an event every time users post a comment. You can read the documentation of proactive messages on Microsoft Bot Framework, or there are several samples on GitHub.\nA great use case for proactive messages is billing and payment requests. Every service provider wants a fast, reliable and easy billing experience for their customers. Imagine if your company\u0026rsquo;s digital assistant could proactively reach out to your customers, let them know their bill\u0026rsquo;s are almost due, and provide them simple ways to pay.\nConclusion # Azure Event Grid is a great way to trigger proactive messages from intelligent bots - but there\u0026rsquo;s so much more it can do. It\u0026rsquo;s designed for modern applications, particularly those using serverless, because of its ability to scale. It lets you connect on-premises and cloud infrastructure via a fast and reliable messaging. It\u0026rsquo;s really fast, and super easy to use. 10/10 - would use again.\nFurther Reading # ASP.NET Controller for Event Grid Webhooks Event Grid Event Grid - Quickstart on the Azure Portal ngrok Bot Framework Proactive Messages Documentation Proactive Messages Samples ","date":"4 March 2018","externalUrl":null,"permalink":"/posts/digital-assistants-azure-eventgrid/","section":"Posts","summary":"","title":"Digital Assistants \u0026 Azure Event Grid","type":"posts"},{"content":"","date":"4 March 2018","externalUrl":null,"permalink":"/tags/digital-assistants-azure-eventgrid/","section":"Tags","summary":"","title":"Digital-Assistants-Azure-Eventgrid","type":"tags"},{"content":"OpenAI\u0026rsquo;s Gym is officially only supported on Linux and OSX. Follow these steps to get up and running on Windows using Windows Subsystem for Linux\nUpdate to the latest version of Windows (\u0026gt;version 1607, \u0026ldquo;Anniversary Update\u0026rdquo;)\nEnable Windows Subsystem for Linux (WSL)\nOpen cmd, run bash\nInstall python \u0026amp; gym (using sudo, and NOT PIP to install gym). So by now you should probably be able to run things and get really nasty graphics related errors. This is because WSL doesn\u0026rsquo;t support any displays, so we need to fake it.\nInstall vcXsrv, and run it (you should just have a little tray icon)\nIn bash export DISPLAY=:0 Now when you run it you should get a display to pop-up, there may be issues related to graphics drivers. Sadly, this is where the instructions diverge if you don\u0026rsquo;t have an NVIDIA graphics card. (If you\u0026rsquo;ve got a nvidia graphics card) -\u0026gt;\nsudo apt-get install nvidia-304 nvidia-prime\nLoad this into test.py\n// test.py import gym if __name__ == \u0026quot;__main__\u0026quot;: env = gym.make(\u0026quot;SpaceInvaders-v0\u0026quot;) env.reset() for _ in range(1000): env.render() env.step(env.action_space.sample()) python test.py\nSPACE INVADERS! My thanks to this thread\n","date":"7 February 2018","externalUrl":null,"permalink":"/posts/openai-windows/","section":"Posts","summary":"","title":"OpenAI Gym on Windows","type":"posts"},{"content":"","date":"7 February 2018","externalUrl":null,"permalink":"/tags/openai-windows/","section":"Tags","summary":"","title":"Openai-Windows","type":"tags"},{"content":"Installing Tensorflow was once challenging, bordering on impossible. Now\u0026hellip; not so much.\nInstall Anaconda # Anaconda is a data science ecosystem, giving users access to all sorts of toolkits and frameworks. Download the Anaconda installer for Windows (it\u0026rsquo;s ~500MB) and install. See, that was easy!\nInstall C++ Build Tools # If you don\u0026rsquo;t already have them installed, you\u0026rsquo;ll need to download and install the Visual C++ Build Tools.\nTF \u0026amp; Keras # Anaconda provides a simple tool for installing TF in a virtual environment. Open up a terminal prompt and type conda create -n tensorflow python=3.5 . This will create a virtual environment for called tensorflow that you\u0026rsquo;ll use to encapsulate all your tensorflow libraries!\nConda Forge is a community led source for conda packages. It provides a simple way to install the packages we\u0026rsquo;re looking for!\nActivate your environment using activate tensorflow.\nNow, we\u0026rsquo;re going to install tf and keras into our virtual anaconda environment using packages from Conda Forge. With your tensorflow env active: conda install -c conda-forge keras tensorflow\nNow use conda list to see all packages installed in your env.\nLook at that! Tensorflow and Keras are both installed!\nTest # Copy the following code into a new file called kerastest.py\nfrom keras.models import Sequential from keras.layers import Dense, Dropout, Activation from keras.optimizers import SGD model = Sequential() model.add(Dense(64, input_dim=20, init='uniform')) model.add(Activation('tanh')) model.add(Dropout(0.5)) model.add(Dense(64, init='uniform')) model.add(Activation('tanh')) model.add(Dropout(0.5)) model.add(Dense(10, init='uniform')) model.add(Activation('softmax')) sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True) model.compile(loss='categorical_crossentropy', optimizer=sgd, metrics=['accuracy']) print('done') If it works, then your environment is ready to go.\nGet Learning!\nMore Info # Conda Environments\nInstalling TF on Windows\nInstalling Keras\n","date":"28 January 2018","externalUrl":null,"permalink":"/posts/tensorflow-keras-windows/","section":"Posts","summary":"","title":"Installing Tensorflow and Keras on Windows","type":"posts"},{"content":"","date":"28 January 2018","externalUrl":null,"permalink":"/tags/tensorflow-keras-windows/","section":"Tags","summary":"","title":"Tensorflow-Keras-Windows","type":"tags"},{"content":"In the late 20th century, the pioneers of the internet and a new generation of online radicals envisioned a future where free communication, access to information, and equality of access made people increasingly fair minded, intelligent, and empathetic. In 2016, that optimism seems like naïveté. So what happened?\nIn the early days, internet technology remained in the hands of large organisations, governments and militaries. Computers were large and expensive, and commonly used for transferring scientific or research data across multiple sites. During this phase, a key design goal was to build a non-centralised network; basically to build a robust communication system that could survive major catastrophes (aka nuclear war). Almost nobody at this time was thinking of the social impact of the technology. The whole point was to build networks that didn\u0026rsquo;t have a centre.\n​A second phase began in the late nineties, which is known today as Internet 1.0. At this time, in the 1990s and early 2000s, the internet was growing, but nobody really knew what was going to happen. The exuberance of the dot-com boom (then bust) typifies the period. Any internet company could have skyrocketing valuations with almost no relation to the real world. At the same time as business talked itself into an irrational boom, thousands of people were creating basic websites, chat services were started, file and image sharing became popular, as did notice boards and eBay. This is really the climactic \u0026lsquo;wild west\u0026rsquo; of the internet. You could say or post almost anything on some dark corner of the internet, and nobody would ever know. Unlike today, traffic wasn\u0026rsquo;t dominated by a few big players. The inherently decentralised nature of the technology had created a social space that was also decentralised. Fertile ground for new ventures, but extremely hard to monetise any new services. Nevertheless, enthusiasm over the popularity of the new tech fuelled the crash at the turn of the millennium.\n​\u0026gt; Cyber-utopians ambitiously set out to build a new and improved United Nations, only to end up with a digital Cirque du Soleil. \u0026ndash; Evgeny Morozov\n​It was during this phase that a new consciousness developed regarding the possibilities created by this new, equal and free social space. An utopian vision of free communication, uninhibited by big media, governments or existing institutions. The internet is uniquely disposed to utopian visions. Unlike other technologies that seek an idealised transformation of reality (though it does this also), the internet creates the possibility of a new virtual space - a virtual space that at least in theory can be made perfect. These ideas were perhaps best expressed by Richard Barbrook in his essay The Californian Ideology, which expressed precisely the ideological tension between the free democratic potential of the left, and the free market potential of the right, that had developed in west coast USA in the late 20th century.\n​\u0026gt; The Californian ideology offers a fatalistic vision of the natural and inevitable triumph of the hi-tech free market. \u0026ndash; Richard Barbrook\nThe convergence of media, computing and telecommunications would inevitably result in an electronic direct democracy - the electronic agora - in which everyone would be able to express their opinions without fear of censorship. \u0026ndash; Richard Barbrook\nSo at the new millennium there coexisted two very different ideas about the future of the internet, that in some sense mapped to a left/right ideological split within the dominant political paradigm. But there had to be a reckoning, and as in the past and in other social arenas, the combatants were those individuals in favour of decentralisation, those intent on aggregating power for themselves. Ultimately, the driver of change into \u0026ldquo;Web 2.0\u0026rdquo; was the monetisation of these emerging technologies.\nWeb 1.0 was making the Internet for people, Web 2.0 is making the Internet better for companies.\n\u0026ndash; Jeff Bezos, CEO Amazon.com\n​Companies and governments weren\u0026rsquo;t going to sit around and watch media, communication, politics and eventually power slip from their hands. Enter Web 2.0. Jeff Bezos calls Web 2.0 \u0026ldquo;making the Internet better for companies\u0026rdquo;. We are living in this period of the social history of the internet. Rather than enjoying the dream of a decentralised internet, today the internet is highly centralised. Most people use the internet every day, but use perhaps 2 or 3 services, perhaps Facebook, Google and Snapchat. These very companies are busy buying up any small competitor in order to maintain their monopolies, and these monopolies allow them to monetise their users, mostly through advertising (with some notable exceptions). Indeed, the class of technology billionaires eschew even the rhetoric of their libertarian predecessors, preferring monopoly to competition.\nCompetition Is for Losers. If you want to create and capture lasting value, look to build a monopoly. \u0026ndash; Peter Thiel\nToday, there is an alliance between the large internet monopolies and governments around the world. Every large internet company (including Google and Facebook) provide intelligence organisations with direct access to their data. In return, they get to use that information to model your personality and target you with advertising. This alliance is completely reversing the idealised model of Internet 1.0: a centralised, controlled, monitored internet that cements the power of existing corporations and governments. But we shouldn\u0026rsquo;t be too surprised. There have been many new communication technologies over the centuries. Every one has been appropriated by powerful institutions, or occasionally, like Facebook or Google, those upstarts challenging the existing order were integrated into a new order resembling the old. Centralisation of information technologies means the centralisation of political power, a power that can easily be turned against the public. After all, what political organisation could survive being labelled as purveyors of \u0026lsquo;fake news\u0026rsquo; by Facebook or Google?\n​As always, the challenges to rational, democratic social organisation are great. Our communication technology facilitates creation and dissemination of information at a rate orders of magnitude larger than at any time in the past. In the face of an information flood, it is quite natural for people to harden in their views; for their ideology to become more rigid. These are common features of politics today: compromise is almost impossible, polarisation is common, identities are solidifying, intellectuals are disparaged, and experts ignored. Even attempts to improve the situation seem desperate and dangerous: the targeting of \u0026lsquo;fake news\u0026rsquo; by Google and Facebook are just as likely to further centralise their power as to improve public knowledge.\n​I don\u0026rsquo;t have the answer on how to reclaim the dreams of the early internet. There are questions that require creative answers. How to limit polarisation and mitigate the effects of echo chambers? How to mediate and balance the growing power of the corporate owners of these new technologies? And perhaps most importantly, who to listen to, and who to ignore, amid this deluge of information flooding our world.\n","date":"23 November 2017","externalUrl":null,"permalink":"/posts/what-happened-to-the-internet/","section":"Posts","summary":"","title":"What happened to the decentralised internet?","type":"posts"},{"content":"","date":"23 November 2017","externalUrl":null,"permalink":"/tags/what-happened-to-the-internet/","section":"Tags","summary":"","title":"What-Happened-to-the-Internet","type":"tags"},{"content":"Australia\u0026rsquo;s energy market has found itself in a particularly strange place. The Finkel report, released in early June, recommends legislating for a Low Emissions Target (LET) and though there are political interests for coal fired generation (CFG), CFG will inevitably decline as alternative technologies displace it. Solar power is now one of the cheapest forms of new electricity generation, and battery storage is about to burst onto the scene. All this at a time when average wholesale prices are rising sharply, and each factor contributing to a sense of price volatility.\nA newly emerging technology space is that of operating grid-scale battery energy storage. But operating grid-scale battery storage is a tricky business. If you\u0026rsquo;ve never heard of the NEM before, read this factsheet (pdf) from the Australian Energy Market Operator (AEMO).\nAll electricity sales are traded through the NEM. It is a wholesale market and prices fluctuate in response to supply and demand at any point in time.\nTo manage price volatility, retailers and generators often enter into hedging contracts to fix the price for future electricity sales. \u0026ndash; NEM Fact Sheet\nBattery Strategy # Baseline # Imagine we\u0026rsquo;re operating a battery in the NEM. Let\u0026rsquo;s develop a strategy (a set of rules by which we decide whether to buy, sell, or sit) in order to maximise our profit. On the face of it, our task is simple: buy/ charge electricity when the price is low, and sell/ discharge when the price is high. As the network is currently dominated by CFG, power is usually cheap at 4am (everyone is asleep but the coal plants are still operating) and expensive at 7am and 7pm (when everyone\u0026rsquo;s making breakfast or dinner, doing the washing, watching TV etc). This will be our baseline strategy to which we can compare any of our other strategies, since its trivially simply to implement. It works because there\u0026rsquo;s a pattern in the market that follows our daily rhythms. However there are some major weaknesses to this approach: its vulnerable to changing patterns in the market, it can\u0026rsquo;t be used in hedging contracts, and our battery might be discharged before prices spike.\nAdapting to price # In fact, it\u0026rsquo;s the last weakness I mentioned above that\u0026rsquo;s the biggest problem. The NEM is a fairly transparent and competitive market, which means that many generators are operating at cost for most of the time. There are gas plants (known as peaking gas plants) that literally remain dormant most of the time, and turn on only when the price spikes and generation becomes profitable. Batteries have the same advantage as gas plants (they can turn on fast) and could also take advantage of high prices. Similarly, we\u0026rsquo;d also like to take advantage of low prices to charge our battery.\nAugmented Baseline # An augmented baseline strategy takes into account price changes. Rather than simply charging/ discharging at particular times, we account for the difference between prices (probably running average price to minimise noise) at charge time and discharge time. If the price different is not above some threshold, then we prefer to sit (remain charged) and wait for a better price. In order to run this strategy properly, we\u0026rsquo;d need to account for the state of charge of the battery, and the self-discharge rate (ie, the rate at which energy leaks out of the battery). It\u0026rsquo;s important to note that we aren\u0026rsquo;t predicting any future prices, we\u0026rsquo;re just comparing with the price we bought at 4am. Our expectation is that by setting our sell threshold at the correct level, we can avoid selling at a low price when we\u0026rsquo;d prefer to wait a few hours and sell later perhaps at a better price. Optimising this strategy simply requires optimising the threshold values, which must change dynamically over a day in order to encourage a complete discharge by 4am the next morning when we wish to recharge.\nConsider the Variables # At this point, we\u0026rsquo;d do well to consider all the information we\u0026rsquo;d need to create the perfect strategy. Clearly we need the current price, and our current state of charge, but crucially we need all future prices. Knowing all future prices means we can decide whether its worth buying/ selling now so that we can buy/ sell later. The following equation expresses profit as a function of two future prices. Prices are quantised. Subscript j represents charge time and subscript i represent discharge time. Lambda represents a discount factor that prioritises earlier profit. The function can be said to represent a full transaction consisting of buy and sell components.\nOur perfect strategy would be to calcuate this function for all i,j (where i \u0026gt; j), sort the results and execute only those transactions with maximum profit. Note that the number of transactions executed is related to the capacity of the battery and charge/ discharge rates.\nPredictive Strategy # We can\u0026rsquo;t know for certain all future prices in the NEM, but if we can make a good prediction then we can get close to implementing our perfect strategy. Actually, what we really need is a probabilistic distribution of future prices. I won\u0026rsquo;t go into detail here about formal decision making strategies with uncertainty, but needless to say it\u0026rsquo;s an area of active research. For a gentle introduction to the subject, I recommend Nassim Taleb\u0026rsquo;s Antifragile. But by weighting our perfect strategy function by probabilistic distributions, we create a strategy that will approximate the perfect strategy as long as our predictions are accurate.\nOperating a battery in the NEM is a combination of two machine learning problems: regression and classification.\nThe insight here is important: with the right strategy better prediction means bigger profits.\nAt this point we can see how the baseline strategy is actually a particular subset of predictive strategy. That is, the case where we set the predictions to be a constant price minimum at 4am and a constant price maximum at 7am and 7pm, with no predictions in between.\nEnter Machine Learning # We want to predict the NEM\u0026rsquo;s market prices, but this is a non-trivial problem. The number of factors influencing price is enormous. A non-exhaustive list includes the weather, events like sports games and concerts, changes to distribution and transmission, coal prices, gas prices, public holidays, and whether the people operating that power plant are having a good day.\nRegression # Predicting NEM prices falls under a class of problems known as regression. In simple terms, regression models the relationship between variables such that, given a number of independent variables, the value of a dependent variable is predicted. Machine learning techniques allow us to introduce literally hundreds or thousands of independent variables (usually called features) into a predictive model. We train this model with data (a training set) in a way that allows us to get extremely accurate predictions. In our context, we want to use as much relevant data as possible in order to predict prices in the NEM.\nExperiment # I ran a basic experiment using a Bayesian Linear Regression model in Azure Machine Learning Studio. The data used was only price data for 2016, with no other features. That is, the only data used was the date, the time, and the NEM spot price. Using the first half of 2016 as a training set, and the second half as test and validation sets, the model achieved a 99.3% coefficient of determination. Basically, the model predicted NEM spot price extremely accurately. This is an extremely promising result, and one that shows even simple machine learning techniques can deliver useful predictions.\nClassification # Operating a battery in the NEM is a combination of two machine learning problems: regression and classification. Classification is a problem in which input features define a particular class. In our case the input features are the current and future prices, and the battery state of charge, while the output classes are buy/ sell/ sit. In our perfect strategy, we could maximise profit with zero risk because the future was perfectly deterministic and known. However, once we introduce uncertainty with our predictive strategy, the classification problem becomes more difficult. It becomes entirely possible, in fact inevitable, that our classification system makes a mistake.\nLearning from Mistakes # One of the huge benefits of machine learning is that we can improve them over time. Retraining models takes significantly less time than the initial training, and we expect that periodic retraining will keep a model up-to-date, as well as improve overall accuracy.\nContracts # I mentioned earlier that hedging contracts are used by players in the NEM to minimise possible losses. The beauty of using machine learning to make decisions on whether to buy/ sell/ sit is that it can account for precisely those contracts. Even our predictive strategy couldn\u0026rsquo;t deal with those, because it only goal was to maximise profit based on price. ML classifications systems can account for as many arbitrary independent variables as you like, and so could make decisions that account for contractual obligations or any other constraint you\u0026rsquo;d like to impose.\nIn fact, another technology that may revolutionise the energy sector is blockchain. ML based battery strategies could automatically include an arbitrary number of smart contracts and have optimal decision making. Indeed, its possible for a ML decision making tool to make decisions taking many factors into account, not just profit.\nAnomaly Detection # Another common use of machine learning is in anomaly detection. As a subset of the clarification problem, we can use machine learning techniques to predict whether a situation is extraordinary. Anomaly detection is useful in our situation for three use cases.\nDetecting Anomalous Market Activity # As a battery operator (or actually any player in NEM), we\u0026rsquo;d love to know when the market might be acting \u0026lsquo;weird\u0026rsquo;. These are the times when we stand to gain, or lose, a lot of money. Recognising these moments as early as possible might make the all the difference.\nDetecting Anomalous Decision Making # Assuming we\u0026rsquo;d deployed a ML tool to make buy/ sell/ sit decisions for us, we\u0026rsquo;d love to have an independent arbiter watching over those decisions and flagging any that seem strange. A supervising anomaly detection system could monitor hundreds of independent batteries and alert us if one of them starts acting strangely.\nDetecting Anomalous Battery Operation # In what\u0026rsquo;s probably the most important application of anomaly detection, we really need to know when our batteries\u0026rsquo; hardware starts acting strangely. Be it irregular state of charge, high self-discharge rates or high temperatures, there are a thousand ways for a battery to degrade and affect system performance. Machine learning lets us account for the hundreds of factors that may be early indicators of battery failure and let us act accordingly. Further, if a battery fails in an unexpected way, we can use the data collected during failure to help us predict the next failure.\nConclusion # Batteries will play an ever greater role in the NEM and machine learning is already here. Increasing profits generated by batteries will be driven almost entirely by improving price prediction, and the state of the art in prediction is machine learning.\n","date":"11 November 2017","externalUrl":null,"permalink":"/posts/learning-to-trade/","section":"Posts","summary":"","title":"Learning to Trade","type":"posts"},{"content":"","date":"11 November 2017","externalUrl":null,"permalink":"/tags/learning-to-trade/","section":"Tags","summary":"","title":"Learning-to-Trade","type":"tags"},{"content":"NASA\u0026rsquo;s latest announcement is important because of Drake.\nWait, not that Drake\u0026hellip; this one, Dr Frank Drake:\nHe\u0026rsquo;s most famous for the Drake Equation, which provides a method for estimating the number of active, intelligent and communicating civilisations in the Milky Way Galaxy - i.e. it tells you how many aliens are out there.\nTRAPPIST-1 # This planetary system recently discovered has 7 Earth-sized planets orbiting a single star! Three of those planets are orbiting within the habitable zone - the \u0026ldquo;goldilocks area\u0026rdquo;, where conditions are just-right to support life. Strangely enough, all these planets are orbiting closer to their star than Mercury is to our own sun. Trappist-1 is an ultra-cool dwarf star. Consequently the planets can be much closer to their star and still may contain liquid water, crucial for life as we know it.\nIn the next few years, several space telescopes will observe the system, looking for clues to the development of extra-terrestrial life. Most exciting: the James-Webb Space Telescope scheduled to launch in 2018.\nSpitzer, Hubble, and Kepler will help astronomers plan for follow-up studies using NASA\u0026rsquo;s upcoming James Webb Space Telescope, launching in 2018. With much greater sensitivity, Webb will be able to detect the chemical fingerprints of water, methane, oxygen, ozone, and other components of a planet\u0026rsquo;s atmosphere. Webb also will analyze planets\u0026rsquo; temperatures and surface pressures – key factors in assessing their habitability.\nWhat the Trappist-1 discovery implies is that the average rate of Earth-like planets-per-star may be much higher than we previously thought (the third factor in the Drake equation: ne). There\u0026rsquo;s a lot of alien worlds out there.\nTL;DR Drake and NASA teamed up to find aliens\n","date":"21 August 2017","externalUrl":null,"permalink":"/posts/drake-and-trappist1/","section":"Posts","summary":"","title":"Drake \u0026 Trappist-1","type":"posts"},{"content":"","date":"21 August 2017","externalUrl":null,"permalink":"/tags/drake-and-trappist1/","section":"Tags","summary":"","title":"Drake-and-Trappist1","type":"tags"},{"content":"Our Broken Steps is a guide to responsible travel, written by my friend Tamshuk Saha. It\u0026rsquo;s words resonated with me, as it expressed many of my own thoughts and feelings. Tamshuk addresses both the socially and environmentally destructive practices prevalent in the tourism industry throughout Asia. In the following I present a synopsis of the book, followed by an attempt to express his principles in my own words.\nOur Broken Steps: A Synopsis # Tamshuk discusses three categories of unethical travel practices: not-so-eco-friendly travel, humanitarian abuse, and clash of cultures. The book is written in the style of a travel-guide, describing many harmful activities, and providing simple solutions that any tourist could undertake. The book is not long, and I encourage you to read it before traveling in Asia or elsewhere. Its available on Amazon, and you can follow Tamshuk at his blog.\nThe Environmental # It is quite simple to comprehend the effects of tourism on local and global environments. The book focuses on the effects of inappropriate garbage disposal. The aggregation of plastic waste in the pacific ocean (a ‘hidden’ island) is contrasted with an image of beautiful beaches, rivers and forests covered in an unsightly later of garbage. As tourists, this problem is one that get’s in the way of our desire to experience nature’s uncorrupted beauty. Us tourists live in a contradictory world, consuming bottled water while complaining of trash. The prescribed cure in this case is fourfold: follow the instructions of tour operators; pick up your own trash; participate in tours that are explicitly environmentally friendly; and volunteer in eco-conservation projects. But I don\u0026rsquo;t think this is enough to solve the problem - the global problem - of plastic waste. Watch this video, because Jeff Bridges\nThe Social # The second section on humanitarian abuse is rather more confronting. The ever growing popularity of sex-tourism, itself often judged as inherently wrong, is linked to a rise in human trafficking and child-sex-slavery. Tamshuk refuses to judge those associated with the sex industry, but of-course condemns the associated horrific practices mentioned above. He places other kinds of tourism-fuelled immoral exploitation in the same category. Orphanage tourism leads some families in Cambodia to intentionally ‘sell’ their children to (fake) orphanages that take tourists there for photo opportunities. Many other tours sell similar kinds of experiences, including slum tours in India and ‘human safari’ tours in the Andaman Islands. There are three ways to engage in socially responsible travel: volunteer responsibly; choose your tours wisely; and reflect on the nature and effects of sex tourism.\nThe Cultural # When people travel across the world and enter an alien culture, their responses are wildly varying. Many people find the experience so unpleasant as to return home and never leave again. However, some expressions of ‘culture shock’ are destructive. These include defacing and destroying monuments or religious artefacts; or wearing culturally insensitive clothing. In these cases, Tamshuk recommends: engage with local people; respect and care for monuments; actively discourage exploitative tourism. This is the most difficult type of responsible travel, since one will certainly confront practices one may find mildly unpleasant to downright appalling. The urge to yell at someone for doing something you find distasteful is something I think many people have experienced. But the responsible thing is to find some way of acting by example, and finding constructive ways of communicating with those you disagree with. Arguing with people in public places (who may not fully understand you anyway) is not the way to build bridges and facilitate learning.\nGoing Deeper: The ‘Golden Rule’ is not Enough # Tamshuk’s prescriptions are of course practical and achievable, and the reader is encouraged to undertake them at any time when travelling as a tourist. But reasoning behind them implies a deeper moral prerogative. It is not enough to naively obey the ‘golden rule’ - to treat others as you wish to be treated. Equally important is to understand the effects of ones actions on others, society and the environment. Only when we understand the consequences of our actions can we really act properly. Only when one knows the true effects of orphanage tourism can one avoid hurting children. Only when we understand that plastic pollutes planet earth for thousands of years do we avoid littering. Only when we choose to truly engage with foreign cultures can we have genuine relationships. Fundamentally, good intentions are not enough and can even harm when applied without knowledge.\nThis moral result is not limited to travel or tourism. It is applicable to everyday life, wherever one finds oneself. And that is why this book is important - not because travel is special, but because we must attempt to understand the consequences of our actions, as tourists or otherwise.\n","date":"11 January 2017","externalUrl":null,"permalink":"/posts/review-our-broken-steps/","section":"Posts","summary":"","title":"Review - Our Broken Steps","type":"posts"},{"content":"","date":"11 January 2017","externalUrl":null,"permalink":"/tags/review-our-broken-steps/","section":"Tags","summary":"","title":"Review-Our-Broken-Steps","type":"tags"},{"content":"In Rajasthan, fortified towns are separated by stretches of arid land. Centuries of sand are piled against their walls. Tourist infantry swarm the ancient structure, as rickshaw cavalry pick off the weak or confused. These aged military structures, now abandoned to hawkers and rickshaws, stand as a reminder of a different time; when the foundations of power were driven deep into the ground.\nTrading caravans travelled from Persia, through the mountain passes, and crossing the Indus river marked their entrance into India. Where the river flows into the Arabian sea, ships arrive at port having travelled far from the gulf coast or the peninsula to the south. Just east of the delta, fertile river plains turn quickly into dry desert. Swapping their donkeys for camels, merchants drove across that dusty land, seeking the markets of Rajasthan: the land of kings. Across this land trade routes spread like cracks through glass.\nThe Desert of Jaisalmer\nIn the east Jaisalmer arises out of the desert: a haven of golden sandstone built to protect the interests on one ruling family, by the town\u0026rsquo;s namesake Rawal Jaisal (ce 1156). For hundreds of years, it\u0026rsquo;s warehouses were filled with rarities from Egypt, Persia, Arabia, Africa and China. The town fell to Ala-ud-din in the 13th century. Two centuries later Akbar, the greatest Moghul emperor, would subsume the town into his empire, sealing the union by marriage. The arrival of the British in Bombay marked the beginning of Jaisalmer\u0026rsquo;s decline, as trade routes shifted south. The ancient path\u0026rsquo;s fate was sealed in 1947, when partition created that great imaginary wound on the face of the earth: the Indian-Pakistani border, which today lies only 100km away, cutting through the heart of the desert.\nThe surrounding desert defines the town. Scattered throughout are small villages clinging to life next to a well or bore hole. The people of the desert cover themselves in bright colours, many of which are symbols of their jati. For most of history, the value of the desert was found almost solely in the goods travelling between east and west. Today, that ancient economy is lost, but partially replaced by tourists taking camel safaris. As in many parts of the world, modernity has arrived by force, smashing ancient roles. Rather than dominating regional trade, camels and their riders now ferry tourists between luxury tents and a sand dune worthy of a selfie.\nThe Jauhar of Chittorgarh\nIn the land of kings, those who built fortresses called themselves Rajputs - the sons of kings. Each clan claimed descent from a god: some claimed a solar ancestry and called themselves Suryavanshi; Chandravanshi from the moon; and Agnivanshi from fire. Many Rajputs workshipped Durga, a goddess with many arms, who would single-handedly (so to speak) destroy the armies of her enemies and decapitate their leader, usually depicted as a demon.\nAt Chittorgarh, the modern mind is disturbed by the rituals of Jauhar, performed at the moment of immanent defeat. Night falls, and brahmin priests begin to chant Vedic mantras. The Rajput women, wearing their wedding dresses, would suicide by self immolation, often taking their children. In the morning the men would commit the saka. Bathing and donning saffron robes, they smeared the ashes of the funeral pyres on their foreheads,and charged into battle in the face of almost certain death - to destroy their enemies, or destroy themselves. When the fortress fell to Akbar in 1567, those final moments were recorded:\nTwo armies raised their lances\nThey formed ambuscades, and drew up in line They were all iron-fisted, biters of steel, All were famous and were clad in iron The heroes brandished swords red with blood One was yielding up his life, another was flying, They mowed down with swords the elephant-trunks You\u0026rsquo;d say serpents were being rained down from the clouds The Commander on a mighty, raging elephant Continually assailed the bow string One paid off his debt of hate with lance and sword Sometimes the heart was riven, sometimes the breast was consumed Tulips were painted by his dagger There was a rain of rings from the heroes\u0026rsquo; armour.\n\u0026ndash;Abu\u0026rsquo;l Fazl, chronicler of the great Mughal emperor Akbar\nThe Jains of Kumblegarh\nIn a land of competing religions and sects, Rajput kings sponsored Jain temples deep inside and nearby their forts. The Rajputs and most of their people worshipped of Shiva or Vishnu, so why would they build temples to a competing sect? To understand, one must first appreciate the passionate non-violence (ahimsa) of the Jainas. Proscription of violence against all animals put most medieval professions (farming, soldiering, etc) out of reach. Consequently, Jainas became a powerful trading community. In these arid lands, trade was the dominant economic force, and controlling it was a priority of all Rajput rulers. To those ends, Jainism was sponsored by many Rajas in order to curry favour amongst the trading community and reap the expected rewards.\nAt Kumblegarh, there are around 300 Jain temples, several of which you can see in the photo above. These buildings stand as reminders of the importance of trade, as well as the tolerance of the Hindu rulers and people. I can\u0026rsquo;t imagine any European ruler allowing the construction of hundreds of non-Christian religious buildings near a palace or castle.\nThe Stones of Mehrangarh\nWhere the desert plains soften into a scrubby forest, lies a slumbering giant: the fortress of Mehrangarh. As these walls come into view, which tower 125 metres above the city of Jodhpur, the power of Jaisalmer is quickly forgotten. Rao Jodha founded the city and fortress in 1459. A tale from that time provides an insight into the superstition that ruled kings, and the desperation that dominated the poor. An ascetic who\u0026rsquo;d previously called the hilltop his home cursed Rao\u0026rsquo;s Fort to forever lack water. To mitigate the curse, a man was buried alive in the foundations, and in return his family was cared for by the Raj: a delusional deal. This power built in stone was again coveted by the Moghuls, who went to great lengths to maintain their alliance with the rulers of Merangarh, on whom Emperor Shah Jahan first bestowed the title of Maharajah.\nThe immensity of Mehrangarh washes over you like a strong breeze, leaving one with a feeling of smallness in the wake of something so large. There is no greater monument to the power of the Rajput kings, now faded from this world.\n","date":"23 December 2016","externalUrl":null,"permalink":"/posts/the-power-of-stone/","section":"Posts","summary":"","title":"The Power of Stone","type":"posts"},{"content":"","date":"23 December 2016","externalUrl":null,"permalink":"/tags/the-power-of-stone/","section":"Tags","summary":"","title":"The-Power-of-Stone","type":"tags"},{"content":"Identity is the way we transpose the subjective into the objective. It is the fixed point by which we pivot between our personal universe and the social world. Identity is the only way to politics, though \u0026ldquo;Identity Politics\u0026rdquo; has been denounced by many as too post-modern, or a cause of modern political apathy, or a conscious plan by the elite to divide the working class. The denial of identity as fundamental to political or human experience is drawn from the hubris of infallibility.\nInsofar as politics in a cultural and social phenomenon, it is influenced by identity in three ways. First, one\u0026rsquo;s identity grows concurrently with beliefs and ideology. Second, shared identities are the foundation of political groups. Third, identity drives effective political action from popular opinion to war. These discussions are not so abstract as to be irrelevant to the world today. Conflict in the 21st century cannot be understood without understanding the perceptions and motivations that drive the actions of modern politicians, parties and states.\nThe USA and ISIS have this is common: both have unshakeable belief in manifest destiny, and that empowers those that fight in all arenas.\nPower in human societies derives from social relations. The \u0026rsquo;lone wolf\u0026rsquo; is impotent. As societies have grown more complex and specialised, so too have groups have become more diverse. Social groups today vary widely - some proselytise, some isolate, some prosper and some are destroyed. To understand the relationship between group membership and identity we can analyse the language used to proclaim membership. Which statement is stronger (I choose Christian here as an example of a successful group) \u0026ldquo;I am a Christian\u0026rdquo; or \u0026ldquo;I have a Christian group membership\u0026rdquo;? Members of successful social groups internalise the identity of that group. Hence, we are comfortable with people proclaiming \u0026ldquo;I am a Christian/ liberal/ soldier/ worker\u0026rdquo;. And now my strong claim: the power of individuals is insignificant compared to the power of groups, and groups are comprised of individuals who have internalised a collective identity.\nOnce internalised, group identities are known as ideologies and comprised of beliefs. The psychological mechanism by which group identities are internalised is often called indoctrination, but could as much be called education or socialisation. The keen observer will note that members of groups will often hold vastly different beliefs (Catholics on birth control, for example). Clearly, a person can internalise multiple group identities, and contradictions between them can have painful psychological consequences. I believe this pain is they key driver of divergence of beliefs within a group, as exemplified by isolated groups. In isolated cults, or tribes, or any other group cut off from broader society, members will tend to converge toward common beliefs. However, most of us must navigate the pitfalls of multiple identities, attempting to reconcile internal contradictions. What is it that prevents us from renouncing an identity? Why is it that group identities persist? I propose that the answer lies in the objectivity and universality provided by these group identities. Converts to Islam gain much more than acceptance in Muslim communities. They are gifted with an \u0026ldquo;objective\u0026rdquo; truth on which to build their own psychological structures. It seems to me that all humans are resistant to the idea that \u0026ldquo;everything is subjective\u0026rdquo;. We prefer to belief that somewhere there exists a strong foundation on which to build our lives. Objectivity is the language of strength and infallibility. Any claim to objectivity is logically isomorphic to a theological axiom. Subjectivity is frightening - it recognises that there are no certainties, and that we are all fallible. Myself, as a subjectivist, claim that there is no functional difference between agreement and fact. Here we come to the crux of the relationship between group identity and ideology: group identities are persistent and can claim objectivity, hence providing psychological comfort for believers. The stronger the objectivity, the more members feel they are working \u0026ldquo;for something bigger than themselves\u0026rdquo;, be it God, the Truth, or the Empire, and hence the more likely they are to sacrifice their individual existence to the group.\nWell that\u0026rsquo;s all very well and good, but what exactly does it have to do with conflict in the modern world? To answer that, we must ask what is it that motivates political action, for political action is inherently entering a conflict. Significant political action is always entered into by groups, though groups will often have a leader, figurehead or otherwise, even the strongest dictator needs allies. The conflict need not be violent, as modern parliaments attest. But to be successful, political action must either promote the spread of an identity, or increase the power of the group (for simplicity, I\u0026rsquo;ve intentionally ignored subset identities). By reduction, I find that all successful groups attempt the following: retain existing members; create new members; increase the power of members. I shall call this the fundamental heuristic of successful groups. New members, if not born into the group, must necessarily be converts (though as mentioned earlier, they may not renounce their other identities). Conversion is an increase in the power of the new group through the addition of a new member as well as through volume effects, which is often coincident with a decrease in power of other groups. Consistent with the heuristic of successful groups, the other groups will resist the conversion. Readers should find similarity between the description given above and theories of evolution. Groups are analogous to species. Successful species must: stay alive long enough to reproduce (retain existing members); reproduce successfully (create new members); adapt to the environment, avoid predators and evade parasites (increase the power of members).\nAll of the mass religions are successful groups, and in particular, I will consider Christianity. Christianity grew from a small choral in 33AD to over a billion today. Following the heuristic of successful groups, I expect that Christianity was particularly good at retaining members, acquiring new members, and increasing the power of members. The first two heuristics are clearly true. Jesus\u0026rsquo; disciples did not renounce him after his death, so clearly early Christianity retained its members. Later Christianity, with ideological and religious hegemony, was particularly good at punishing heretics and unbelievers. But why were Christians stoic during the three centuries of Roman persecution? I suspect that the answer lies in the central objectivity and universality of early Christian doctrine, as well as the comfort and precedence it gave to the poor. It is incontestable that Christianity is good at acquiring new members - it has conquered entire continents. The final heuristic is harder to judge: has Christianity increased the power of its members? Not every Christian is powerful, but even if I attempt to consider the average power of Christians over the entire Christian period, I find am unable to disentangle Christian power from non-Christian power. Therefore, I will consider a single point in Christian history, and perhaps the most significant: the conversion of Constantine. I cannot believe that anyone would argue that this was not an increase in the total power of Christianity, as well as an increase for every Christian. While this narrative should corroborate the fundamental heuristic, it should equally apply to many other successful groups. I can, however, think of groups whose strategies for survival include exclusivity, meaning that the number of new members is purposefully limited, in order to increase the power of existing members.\nTo summarise: long lived social groups consist of individuals who have internalised a group identity. The beliefs and ideology of the members create objective coordinates with which members can orient themselves. Actions made by these members, and hence by the group, are motivated by those very same beliefs and ideology. The stronger the claim to objectivity, the more members will act in the interest of the group over themselves. Successful groups tend to retain existing members, to create new members, and to increase the power of members - this is called the fundamental heuristic of successful groups.\n","date":"23 May 2015","externalUrl":null,"permalink":"/posts/identity-politics/","section":"Posts","summary":"","title":"Identity is the only form of politics","type":"posts"},{"content":"","date":"23 May 2015","externalUrl":null,"permalink":"/tags/identity-politics/","section":"Tags","summary":"","title":"Identity-Politics","type":"tags"},{"content":"","date":"23 October 2014","externalUrl":null,"permalink":"/tags/consciousness/","section":"Tags","summary":"","title":"Consciousness","type":"tags"},{"content":"","date":"23 October 2014","externalUrl":null,"permalink":"/tags/free-will/","section":"Tags","summary":"","title":"Free-Will","type":"tags"},{"content":"Choice and free will are convenient conceptual shorthands to express some of the complexity of human existence. But what is freedom? Are all choices free choices, and what are the hidden ideological and cognitive structures that give meaning to those questions? Ultimately, ideas of self are intimately entwined with conceptions of and belief in free will, and we must examine the conceptual, cultural and spiritual roots of self to come to terms with freedom, will and choice. First, I must describe orthodox free will and its origins in western enlightenment philosophy. Then, after critiquing this view, I will offer an alternative, not by directly answering the question, but by a different interpretation of self. My proposition is that to ask whether one has free will, one implicitly legitimises a European-derived conceptualisation of self, which can induce motivation and spiritual pain.\nModern dominant notions of free will (in the west) are derived from individualist philosophies. By this, I mean that choices, which are the building blocks of will, are perceived of as being transactional, occurring between atomic individuals. Rationality is described through ideas like \"homo-economicus\" and is essentially reductionist. Hence, modern discourse on free will centres around problems of determinism; that is, to what degree are one's actions pre-determined by the physical world? There are four responses to determinism, and you can read more about them on Wikipedia.\nModern western societies live with these ideas embedded into their psycho-social frameworks, even though they are discredited by modern mathematics (chaos) and physics (quantum). Westerners tend to think of ourselves as individuals interacting with the world. There is a fundamental dualism between ourselves and the world. Enter choice: the universe exists, and we choose how to act within it. Thus arises a modern spiritual dilemma. If science has explained and hence can predict every action-reaction, then how can our choices be meaningful? To most western egos, it is psychologically unacceptable to give so little weight to one\u0026rsquo;s own psychological existence. \u0026ldquo;I feel choice, and it hurts to think I\u0026rsquo;ve been deluded for my entire life\u0026rdquo;. So most of us compromise with something like the following: \u0026ldquo;I don\u0026rsquo;t know whether free will exists, so I may as well believe it does.\u0026quot;\nWestern free will is a convenient collective delusion. It is an inevitable response to atomic individualism, by which I mean the idea that I exist entirely and exclusively within my own body. There are at least two methods for refuting atomic individualism, and those are non-western spirituality, and modern physics and mathematics.\nAt the heart of an atomic individual's free will is ego. Ego says, \"my opinion is important\"; \"my existence is unique\"; \"my perspective matters\"; and \"I am separate\". In Eastern spiritual traditions, like Buddhism, but also in many traditional societies, rejection of ego is valued, particularly in spiritual activities that seek ego death. In these traditions we also find individualism to be much differently perceived. Ubuntu is an African idea, roughly meaning I am because we are. Essentially, individuals are not complete by themselves; they are not atomic. Buddhism walks a middle path. Clearly, one should not deny the physical circumstances that circumscribe possible actions, and hence limit free choice. But there must exist some degree of free will, because to deny it would be to deny the efforts of Buddhists to make moral progress. To ask the question \"is there free will\" is problematic, because freedom is necessarily constrained by environment, and freedom is a cultural concept dependant on philosophical and social education.\nModern physics and mathematics provide westerners with a path to rejecting atomic individualism and hence the orthodox formulation of the problem of free will. Contrary to Newton and those who followed, the universe is not deterministic. Neither are boundaries well defined. Most mathematical history revolves around simple abstractions. Consider a cube, which is a simple shape with well defined boundaries, finite volume and finite surface area. All points in space can be determined to lie inside or outside the cube. We have known as early as Pythagoras that the real world does not contain cubes - hence the Pythagorean and Platonic obsession with abstraction. A lesser known revolution in the late 20th century dispensed with these shapes in favour of fractal geometries. The universe is much better described using fractal geometry. Unlike cubes, fractals do not have well defined boundaries. Fractals are often formed by the process of recursion. In an interpretation of self by mathematician Douglas Hofstadter in I am a Strange Loop, consciousness and the self can be thought of as an emergent phenomenon from self referential feedback. If we accept this interpretation, then we can expect the \"shape\" of our consciousness to be a fractal, and hence not to have well defined boundaries. In itself, this strikes a fatal blow to atomic individualism. Chaos theory also strikes a blow to determinism, and quantum mechanics rings a death knell. I leave it to the reader to explore the revelations of modern scholarship.\nChaos: When the present determines the future, but the approximate present does not approximately determine the future. - Edward Lorenz\nNow, where do we find ourselves? Adrift in a chaotic universe, without even our selves as rocks in a turbulent ocean. And where is free will? I propose there is no free will, there is only will. We are not free, we are constrained by our physical and our social world. But there is spirituality that provides consolation. We are not atomised individuals. The boundary between us is fractal - it is impossible to tell precisely where you end and I begin. The same is true for our selves and the physical universe. This revelation provides concrete reasons to believe in the interconnectedness of all people, all life, all places, and all times. I am not separate from the world, but a part of it; and what is my puny will to the will of the universe. And yet the universe is not cold, because you exist, and us manifests. To revel in the soup of souls, one must leave free will behind, and recognise that whatever we are, we are it together.\n","date":"23 October 2014","externalUrl":null,"permalink":"/posts/on-free-will/","section":"Posts","summary":"","title":"On Free Will","type":"posts"},{"content":"","date":"23 October 2014","externalUrl":null,"permalink":"/tags/philosophy/","section":"Tags","summary":"","title":"Philosophy","type":"tags"},{"content":"","date":"23 October 2014","externalUrl":null,"permalink":"/tags/spirituality/","section":"Tags","summary":"","title":"Spirituality","type":"tags"},{"content":"The pieces are moving; the battle for Eurasia has begun.\nThe 20th century saw the the first global wars. Before the onset of the great war, European powers dominated the globe through superior technology, particularly in war. Two world wars later, and the balance of power had shifted dramatically.\nOrthodox interpretation of the post war period proposes a war of ideologies between capitalism and collectivism. But this was essentially a collective brainwashing by the two major powers of the era: the Soviet Union and the United States. In the west, the narrative goes something like: capitalism and democracy are fundamentally connected, and are better than communism. However, this interpretation entirely fails to account for the role of China in the fall of the USSR. In 1971 Kissinger traveled to China, initiating a secret strategic relationship between the emerging Chinese Communist-led state and the Americans. In Chinese terms, using the far away enemy against the near enemy. The Sino-Soviet split became a dagger to the heart of soviet communism. The Soviet Union, which became heavily militarised and surrounded by enemies, could not sustain both its economy and military in such a hostile environment. What followed was victory for the Americans and the Chinese. Once again, orthodox interpretation of the fall resembles Fukuyama. But events in the early 21st century throw new challenges to the end of history. History, rather than ending, provides new challenges.\nToday, an assertive China is evolving into a modern superpower, and a newly resurgent Russia refuses to be relegated to middle-power status. A multi-polar world order is emerging, old alliances are shifting, middle powers are trapped between feuds, and smaller countries are destroyed. The great game is being played once again.\nAt the heart of the new great game is a challenge to a global hegemony of the United States. US power is being challenged in two great theatres: East Asia and the Mediterranean. In the Mediterranean, states and leaders are falling like flies. Almost every country bordering the sea has been touched by the shifting world order, from Spain, Italy and Greece\u0026rsquo;s battle with the European troika, to the stalled revolution in Egypt, to the war for the heart of the middle east in Syria and Iraq. The victorious powers of the 20th century can still flex significant military might, as they demonstrated in the removal of Gaddafi. But the will of NATO is not so strong as it was. Its power is being challenged in Ukraine and in Syria, by a newly confident Russia, and quietly backed by a diplomatic China. However, the battles are not just military. In a ominous reflection of the complex web of agreements between states before the outbreak of war in 1914, great and middle powers are scrambling to sign multi-billion dollar deals to draw others into their spheres of influence. In 2014, Russia signed significant gas, nuclear and weapons deals that span decades, and they signed them with partners of great strategic importance. Similarly, China has created new institutions for infrastructure in South East Asia. Considering these deals gives us some insight into the state of the great game at the end of this year.\nSince 1991, Sino-Russian relations have improved dramatically from the lows of the 20th century. Old territorial disputes have been solved, and cross border trade increased. In 2014, the two signed a 30 year long gas contract (Russia supplying 38 billion cubic litres per year) as well as a 150 billion yuan central bank liquidity swap. It is this relationship that will come to define geopolitics in Eurasia, because it allows both Russia and China to focus their efforts in regions of much greater value than the long desolate border between them. For China, a secure Russian border allows it to focus its power (especially military power) in the east, around disputed territories and valuable natural resources. Russia, who has always struggled with distance fronts and long supply lines, can focus of conflicts in the West, including in the Middle East and western Europe. An economic game is also afoot. This week Russia signed a hundred billion dollar deal with India, just weeks after cancelation of the South Stream gas pipeline project, which now terminates in Turkey. Turkey too has been signing billion dollar deals with the bear from the north. A line has been drawn, across which Russia will not tolerate NATO forces, and within which countries lie inside its sphere of influence. It runs south from Belarus, bisecting the Ukraine, Crimea and the Black Sea, to Turkey, Syria and Iraq and ending somewhere in the gulf. Hence, Russia and NATO find themselves at odds over the future of Syria. Not only because of relatively recent militarism in nearby Georgia, but because of a greater struggle between the USA and EU (NATO) and Russia and China, what one could refer to as the Shanghai Cooperation Organisation.\nThe game is being played by countries as far away as Australia. Ukrainian president Petro Poroshenko visited last week, in an event that likely benefited both himself and Australian Prime Minister Tony Abbott. For Poroshenko, the visit lends legitimacy. For Abbott, the visit reminds the Australian public of the downing of MH17, a strong point of Abbott, who has become desperately unpopular in recent months. The two signed a trade deal worth perhaps one hundred million dollars - puny in comparison with deals discussed above, but significant for its symbolic value.\nIs Eurasia heading for war once again? Or has the nature of great power changes dramatically from 100 years ago? Enter 2015.\n","date":"23 May 2014","externalUrl":null,"permalink":"/posts/the-battle-for-eurasia/","section":"Posts","summary":"","title":"The Battle for Eurasia","type":"posts"},{"content":"","date":"23 May 2014","externalUrl":null,"permalink":"/tags/the-battle-for-eurasia/","section":"Tags","summary":"","title":"The-Battle-for-Eurasia","type":"tags"},{"content":" About Me # Hello! I\u0026rsquo;m Rian Finnegan. This is my personal website built using Hugo and the Blowfish theme.\nSkills # Web Development Data Science Cloud Architecture Contact # Feel free to reach out to me via email or social media.\n","externalUrl":null,"permalink":"/about/","section":"Rian Finnegan","summary":"","title":"About","type":"page"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":" Blog Posts # Here are all my blog posts:\n","externalUrl":null,"permalink":"/blog/","section":"Blog","summary":"","title":"Blog","type":"blog"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]